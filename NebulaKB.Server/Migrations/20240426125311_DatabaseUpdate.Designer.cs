// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NebulaKB.Server.Models;

#nullable disable

namespace NebulaKB.Server.Migrations
{
    [DbContext(typeof(NebulaKBContext))]
    [Migration("20240426125311_DatabaseUpdate")]
    partial class DatabaseUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NebulaKB.Server.Models.Cart", b =>
                {
                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Products")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasIndex("Customer");

                    b.HasIndex("Products");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("NebulaKB.Server.Models.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SubOf")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Categori__3214EC079FDC098A");

                    b.HasIndex("SubOf");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("NebulaKB.Server.Models.Customer", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("DoB")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("Point")
                        .HasColumnType("float");

                    b.Property<int?>("Rank")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Customer__3214EC073F71CA40");

                    b.HasIndex(new[] { "User" }, "UQ__Customer__BD20C6F1C798F498")
                        .IsUnique()
                        .HasFilter("[User] IS NOT NULL");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("NebulaKB.Server.Models.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("DoB")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly?>("OptIn")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("OptOut")
                        .HasColumnType("date");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("User")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Employee__3214EC0709D67726");

                    b.HasIndex(new[] { "User" }, "UQ__Employee__BD20C6F153E9EFF6")
                        .IsUnique()
                        .HasFilter("[User] IS NOT NULL");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("NebulaKB.Server.Models.OderDetail", b =>
                {
                    b.Property<string>("Oder")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasIndex("Oder");

                    b.HasIndex("Product");

                    b.ToTable("OderDetails");
                });

            modelBuilder.Entity("NebulaKB.Server.Models.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("AdditionalFee")
                        .HasColumnType("float")
                        .HasColumnName("Additional_fee");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Breakdown")
                        .HasColumnType("text");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<double?>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("PK__Orders__3214EC073070C9EC");

                    b.HasIndex("Customer");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("NebulaKB.Server.Models.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Data")
                        .HasColumnType("text");

                    b.Property<string>("Des")
                        .HasColumnType("text");

                    b.Property<string>("Images")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Products__3214EC078CB13366");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("NebulaKB.Server.Models.ProductCategory", b =>
                {
                    b.Property<string>("Categories")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Products")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasIndex("Categories");

                    b.HasIndex("Products");

                    b.ToTable("Product_category", (string)null);
                });

            modelBuilder.Entity("NebulaKB.Server.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(3);

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__User__3214EC07402B94DD");

                    b.HasIndex(new[] { "Username" }, "UQ__User__536C85E4BB203206")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("NebulaKB.Server.Models.Cart", b =>
                {
                    b.HasOne("NebulaKB.Server.Models.Customer", "CustomerNavigation")
                        .WithMany()
                        .HasForeignKey("Customer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Cart__Customer__4B0D20AB");

                    b.HasOne("NebulaKB.Server.Models.Product", "ProductsNavigation")
                        .WithMany()
                        .HasForeignKey("Products")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Cart__Products__4C0144E4");

                    b.Navigation("CustomerNavigation");

                    b.Navigation("ProductsNavigation");
                });

            modelBuilder.Entity("NebulaKB.Server.Models.Category", b =>
                {
                    b.HasOne("NebulaKB.Server.Models.Category", "SubOfNavigation")
                        .WithMany("InverseSubOfNavigation")
                        .HasForeignKey("SubOf")
                        .HasConstraintName("FK__Categorie__SubOf__4EDDB18F");

                    b.Navigation("SubOfNavigation");
                });

            modelBuilder.Entity("NebulaKB.Server.Models.Customer", b =>
                {
                    b.HasOne("NebulaKB.Server.Models.User", "UserNavigation")
                        .WithOne("Customer")
                        .HasForeignKey("NebulaKB.Server.Models.Customer", "User")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Customers__User__4A18FC72");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("NebulaKB.Server.Models.Employee", b =>
                {
                    b.HasOne("NebulaKB.Server.Models.User", "UserNavigation")
                        .WithOne("Employee")
                        .HasForeignKey("NebulaKB.Server.Models.Employee", "User")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Employee__User__4924D839");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("NebulaKB.Server.Models.OderDetail", b =>
                {
                    b.HasOne("NebulaKB.Server.Models.Order", "OderNavigation")
                        .WithMany()
                        .HasForeignKey("Oder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__OderDetail__Oder__50C5FA01");

                    b.HasOne("NebulaKB.Server.Models.Product", "ProductNavigation")
                        .WithMany()
                        .HasForeignKey("Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__OderDetai__Produ__51BA1E3A");

                    b.Navigation("OderNavigation");

                    b.Navigation("ProductNavigation");
                });

            modelBuilder.Entity("NebulaKB.Server.Models.Order", b =>
                {
                    b.HasOne("NebulaKB.Server.Models.Customer", "CustomerNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("Customer")
                        .IsRequired()
                        .HasConstraintName("FK__Orders__Customer__4FD1D5C8");

                    b.Navigation("CustomerNavigation");
                });

            modelBuilder.Entity("NebulaKB.Server.Models.ProductCategory", b =>
                {
                    b.HasOne("NebulaKB.Server.Models.Category", "CategoriesNavigation")
                        .WithMany()
                        .HasForeignKey("Categories")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Product_c__Categ__4CF5691D");

                    b.HasOne("NebulaKB.Server.Models.Product", "ProductsNavigation")
                        .WithMany()
                        .HasForeignKey("Products")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Product_c__Produ__4DE98D56");

                    b.Navigation("CategoriesNavigation");

                    b.Navigation("ProductsNavigation");
                });

            modelBuilder.Entity("NebulaKB.Server.Models.Category", b =>
                {
                    b.Navigation("InverseSubOfNavigation");
                });

            modelBuilder.Entity("NebulaKB.Server.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("NebulaKB.Server.Models.User", b =>
                {
                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
